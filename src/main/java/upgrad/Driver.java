package upgrad;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

import java.sql.*;

public class Driver {

    /**
     * Driver class main method
     * @param args
     * @throws SQLException
     */
    public static void main(String[] args) throws SQLException {
        // MySql credentials
        String sqlUrl = "jdbc:mysql://pgc-sd-bigdata.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/pgcdata";
        String sqlUser = "student";
        String sqlPassword = "STUDENT123";

        // MongoDB Configurations
        String mongodbUrl = "mongodb://ec2-3-86-83-184.compute-1.amazonaws.com:27017";
        String mongodbDB = "Assignment";
        String mongodbCollection = "products";

        // Connection Default Value Initialization
        Connection sqlConnection = null;
        MongoClient mongoClient = null;

        try {
            // Creating database connections
            // SQL connections
            sqlConnection = DriverManager.getConnection(sqlUrl, sqlUser, sqlPassword);
            //  if (sqlConnection != null) {
            //  	System.out.println("Connected to the database");
            //  }
            Statement statement = sqlConnection.createStatement();

            // mongoDB connections
            mongoClient = MongoClients.create(mongodbUrl);
            MongoDatabase db = mongoClient.getDatabase(mongodbDB);

            // If collection is already exists with data then drop the collection and program recreates
            // collection and adds data from SQL tables
            db.getCollection(mongodbCollection).drop();

            // Creation of mongoDB collection instance
            MongoCollection<Document> collection = db.getCollection(mongodbCollection);

            // Import data into MongoDb
            readDataFromSQLAndImportDataInMongoDB(statement, collection, "mobiles");
            readDataFromSQLAndImportDataInMongoDB(statement, collection, "cameras");
            readDataFromSQLAndImportDataInMongoDB(statement, collection, "headphones");

            // closing statement instance
            statement.close();

            // List all products in the inventory
            CRUDHelper.displayAllProducts(collection);

            // Display top 5 Mobiles
            CRUDHelper.displayTop5Mobiles(collection);

            // Display products ordered by their categories in Descending Order Without autogenerated Id
            CRUDHelper.displayCategoryOrderedProductsDescending(collection);

            // Display product count in each category
            CRUDHelper.displayProductCountByCategory(collection);

            // Display wired headphones
            CRUDHelper.displayWiredHeadphones(collection);
        }
        catch(Exception ex) {
            System.out.println("Got Exception.");
            ex.printStackTrace();
        }
        finally {
            // Close Connections

            if (sqlConnection != null){
                sqlConnection.close();
            }
            if (null != mongoClient) {
                mongoClient.close();
            }
        }
    }

    public static void readDataFromSQLAndImportDataInMongoDB(Statement statement, MongoCollection<Document> collection, String tableName) throws SQLException {
        // Create SQL string to execute query and get ResultSet and ResultSetMetaData
        String sql = "select * from " + tableName;
        ResultSet rs = statement.executeQuery(sql);
        ResultSetMetaData rsmd = rs.getMetaData();

        // Add new attribute Category in mongoDB collection with specific value
        String category = null;
        if (tableName.equals("mobiles")) {
            category = "Mobiles";
        } else if (tableName.equals("cameras")) {
            category = "Cameras";
        } else {
            category = "Headphones";
        }

        // Iterate through all rows in ResultSet
        while (rs.next()) {
            // Create new document
            Document doc = new Document();
            // Iterate through all columns in ResultSet and add column name and value pair in mongoDB document
            for(int i=1; i<=rsmd.getColumnCount();i++) {
                doc.append(rsmd.getColumnName(i), rs.getString(i));
            }
            // Add Category in mongoDB document
            doc.append("Category", category);
            // Add document in mongoDB collection
            collection.insertOne(doc);
        }
    }
}